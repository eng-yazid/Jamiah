
//        Log.d("Insert: ", "Inserting ..");
//        //db.addContact(new Contact("Ravi", "9100000000"));
//        //Jamiah(int id, int amount,int months,int numberOfPersons, String startDate , String endDate)
//        db.addJamiah(new Jamiah(40000,10,10,"10-10-2010","10-10-2011"));
//        db.addJamiah(new Jamiah(30000,10,10,"10-10-2012","10-10-2013"));
//        db.addJamiah(new Jamiah(10000,7,7,"10-10-2014","10-10-2015"));
//

        // Reading all contacts
//        Log.d("Reading: ", "Reading all contacts..");
 //       List<Jamiah> contacts = db.getAllJamiahs();

  //      for (Jamiah cn : contacts) {
//            String log = "Id: "+cn.getID()+" ,Name: " + cn.getName() + " ,Phone: " + cn.getPhoneNumber();
   //         String log = "id: " + cn.getId() + " ,Amount: " + cn.getAmount() + ",Months: " + cn.getMonths();
            // Writing Contacts to log
      //      Log.d("Name: ", log);
    //    }



/*
        calculateButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                //InputMethodManager inputManager = (InputMethodManager)
                //        getSystemService(Context.INPUT_METHOD_SERVICE);

              //  InputMethodManager.HIDE_NOT_ALWAYS);
                int resulted = calculate();
                int castedD= resulted;

                String showResult = "The result is : " + castedD +" .";
                resultTV.setText(showResult);
            }
        });
*/
/*
    public static class DatePickerFragment extends DialogFragment
            implements DatePickerDialog.OnDateSetListener {

        @Override
        public Dialog onCreateDialog(Bundle savedInstanceState) {
            // Use the current date as the default date in the picker
            final Calendar c = Calendar.getInstance();
            int year = c.get(Calendar.YEAR);
            int month = c.get(Calendar.MONTH);
            int day = c.get(Calendar.DAY_OF_MONTH);

            // Create a new instance of DatePickerDialog and return it
            return new DatePickerDialog(getActivity(), this, year, month, day);
        }

        public void onDateSet(DatePicker view, int year, int month, int day) {
            // Do something with the date chosen by the user
        }
    }
    */


//    private int convertToInt(String amountString,String monthsString, String personsString){
//
//        int amountValueInt = Integer.valueOf(amountString);
//        int monthsValueInt = Integer.valueOf(monthsString);
//        int personsValueInt = Integer.valueOf(personsString);
//
//        return 0;
//    }



        /* spinner  months part -------------------------*/

//        ArrayAdapter<CharSequence> monthsAdapter = ArrayAdapter.createFromResource(this,
//                R.array.months_array, R.layout.spinner_style);

        // Specify the layout to use when the list of choices appears
      //  monthsAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        // Apply the adapter to the spinner
//        spinnerMonths.setAdapter(monthsAdapter);

//        spinnerMonths.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
//            @Override
//            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
//                int resulted = calculate();
//                //   int castedD= resulted;
//
//                showResult = " كل شخص يدفع:" + resulted + "  شهريا";
//                resultTV.setText(showResult);
//                if (myCalendar2 != null) {
//                    setEndDate();
//                }
//
//            }

//            @Override
//            public void onNothingSelected(AdapterView<?> parent) {
//
//            }
//        });



//                String myFormat = "MM/dd/yy"; //In which you need put here
//                SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.getDefault());
                //myCalendar2.add(Calendar.MONTH,spinnerToIntConverter(spinnerMonths));

               // Log.d(TAG," "+ myCalendar2.get(Calendar.MONTH));
                //setEndDate();


//        String message = intent.getStringExtra(MainActivity.JAMIAH_SUCCESS);
//        int[] usersCountersReceived = intent.getIntArrayExtra(MainActivity.JAMIAH_SUCCESS);
        //0 persons, 1 months
//        if(usersCountersReceived[0] > usersCountersReceived[1])
//        {
//            users = usersCountersReceived[1];
//        }else
//        {
//            users = usersCountersReceived[0];
//        }



        /* spinner  months part -------------------------*/

//        ArrayAdapter<CharSequence> monthsAdapter = ArrayAdapter.createFromResource(this,
//                R.array.months_array, R.layout.spinner_style);

        // Specify the layout to use when the list of choices appears
      //  monthsAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        // Apply the adapter to the spinner
//        spinnerMonths.setAdapter(monthsAdapter);

//        spinnerMonths.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
//            @Override
//            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
//                int resulted = calculate();
//                //   int castedD= resulted;
//
//                showResult = " كل شخص يدفع:" + resulted + "  شهريا";
//                resultTV.setText(showResult);
//                if (myCalendar2 != null) {
//                    setEndDate();
//                }
//
//            }

//            @Override
//            public void onNothingSelected(AdapterView<?> parent) {
//
//            }
//        });


        //           else
//           {
//               Toast.makeText(getApplicationContext(),
//                       "the entered period is less than one month" + 0,
//                       Toast.LENGTH_LONG).show();
//               return null;
//           }
//        if(numberOfMonths > 1)
//        {
//
//        }


//        int id = jamiah.getId();
//        int amount = jamiah.getAmount();
//        int months = jamiah.getMonths();
//        int persons = jamiah.getNumberOfPersons();
//        Date start = jamiah.getStartDate();
//        Date end = jamiah.getEndDate();
//        jamiah = new Jamiah(id,amount,months,persons,start,end);
//        //Jamiah(int id, int amount, int months,int numberOfPersons, Date startDate , Date endDate)

   public void setEndDate() {
        String myFormat = "dd/MM/yy"; //In which you need put here
        SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.getDefault());
        //myCalendar2.add(Calendar.MONTH,spinnerToIntConverter(spinnerMonths));
        myCalendar2.set(Calendar.MONTH,Calendar.MONTH + Calendar.MONTH );
        endDateEt.setText(sdf.format(myCalendar2.getTime()));

    }



    Gradle instructions
    Alternatives:
    Unity
    C++
    The Google services plugin for Gradle loads the google-services.json file you just downloaded. Modify your build.gradle files to use the plugin.

    Project-level build.gradle (<project>/build.gradle):

    buildscript {
      dependencies {
        // Add this line
        classpath 'com.google.gms:google-services:3.0.0'
      }
    }
    App-level build.gradle (<project>/<app-module>/build.gradle):

    ...
    // Add to the bottom of the file
    apply plugin: 'com.google.gms.google-services'
    includes Firebase Analytics by default help_outline
    Finally, press "Sync now" in the bar that appears in the IDE:



    testCompile 'junit:junit:4.12'
    compile 'com.google.android.gms:play-services-appindexing:9.8.0'



<!--
    <resources>
        <style name="AppTheme.Base" parent="Theme.AppCompat.Light.NoActionBar">
            <!-- Customize your theme here. -->
            <item name="colorPrimary">#58C7FC</item>
            <!-- Light Indigo -->
            <item name="colorPrimaryDark">#3949AB</item>
            <!-- Dark Indigo -->
            <item name="colorAccent">#00B0FF</item>
            <!-- Blue -->
        </style>
        <style name="AppThemeMD" parent="AppTheme.Base"></style>
    </resources>

 -->


    <com.roughike.bottombar.BottomBar
        android:id="@+id/bottomBar"
        android:layout_width="match_parent"
        android:layout_height="60dp"
        android:layout_alignParentBottom="true"
        app:bb_tabXmlResource="@id/bottomBar" />


//        // Adding Floating Action Button to bottom right of main view
//        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
//        fab.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
////                Snackbar.make(v, "Hello Snackbar!",
////                        Snackbar.LENGTH_LONG).show();
//                //inside the inner class, replace this with Activity.this (the Context)
//                Intent intent = new Intent(MasterActivity.this,MainActivity.class);
//                startActivity(intent);
//
//            }
//        });



//                        signinFragment= new SigninFragment();
//                        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
//                        transaction.replace(R.id.create_new_jam, signinFragment);
//                        transaction.addToBackStack(null);
//                        transaction.commit();


//---------------------------firebase functions ----------------------------------
//    private void attachDatabaseReadListener(){
//
//        if(mChildEventListener == null) {
//            mChildEventListener = new ChildEventListener() {
//                @Override
//                public void onChildAdded(DataSnapshot dataSnapshot, String s) {
//                    FriendlyMessage friendlyMessage = dataSnapshot.getValue(FriendlyMessage.class);
//                    mMessageAdapter.add(friendlyMessage);
//                }
//
//                @Override
//                public void onChildChanged(DataSnapshot dataSnapshot, String s) {
//
//                }
//
//                @Override
//                public void onChildRemoved(DataSnapshot dataSnapshot) {
//
//                }
//
//                @Override
//                public void onChildMoved(DataSnapshot dataSnapshot, String s) {
//
//                }
//
//                @Override
//                public void onCancelled(DatabaseError databaseError) {
//
//                }
//            };
//
//            mMessagesDatabaseReference.addChildEventListener(mChildEventListener);
//        }
//
//    }
//    private void detachDatabaseReadListener(){
//        if(mChildEventListener != null) {
//            mMessagesDatabaseReference.removeEventListener(mChildEventListener);
//            mChildEventListener = null;
//        }
//    }
//    private void onSignedInInitialize(String username){
//        mUsername = username;
//        attachDatabaseReadListener();
//
//    }
//
//    private void onSignedOutCleanup(){
//        mUsername =ANONYMOUS;
//        mMessageAdapter.clear();
//        detachDatabaseReadListener();
//
//    }



                        // j is not the correct object-----//
                        // mMessagesDatabaseReference.push().setValue(j);
                        //jamiah data should be entered after adding its users
                    //    String idFireBase =  mJamiahDatabaseReference.push().getKey();
                    //   mJamiahDatabaseReference.child(idFireBase).setValue(jamiah);
                    //   Toast.makeText(MainActivity.this, "jamiah added",Toast.LENGTH_LONG).show();


//    public void sendJam()
//    {
//
//        Intent intent = new Intent(this, MasterActivity.class);
//
//
//        // j is not the correct object-----//
//        // mMessagesDatabaseReference.push().setValue(j);
//        //jamiah data should be entered after adding its users
//        String idFireBase =  mJamiahsDatabaseReference.push().getKey();
//
//        mJamiahsDatabaseReference.child(idFireBase).child("members").setValue("");
//           //Toast.makeText(MainActivity.this, "jamiah added",Toast.LENGTH_LONG).show();
//
//        intent.putExtra("jamiah",jamiah);
//        startActivity(intent);
//    }